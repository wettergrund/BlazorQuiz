@page "/game/{id}"
@using MudBlazor
@using System.Text.Json;
@using System.Text;
@using System.Net.Http.Headers;
@using BlazorQuiz.Shared.ViewModels;
@inject HttpClient _httpClient
@inject ILocalStorageService _localStorage

<div class="ma-5 d-flex align-center justify-center">
    <MudGrid Class="d-flex align-center justify-center">
        <MudText Typo="Typo.h4">Quiz: @* @quizData.First().Title *@ </MudText>
        <MudItem xs="12" Class="d-flex align-center justify-center">
            <MudGrid>
                <MudItem xs="6">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-flex align-center justify-center mud-width-full py-8">1</MudButton>
                </MudItem>
                <MudItem xs="6">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-flex align-center justify-center mud-width-full py-8">2</MudButton>
                </MudItem>
                <MudItem xs="6">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-flex align-center justify-center mud-width-full py-8">3</MudButton>
                </MudItem>
                <MudItem xs="6">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="d-flex align-center justify-center mud-width-full py-8">4</MudButton>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
</div>


@code {
	[Parameter]
	public string id { get; set; }
	List<NewQuizViewModel>? quizData = new List<NewQuizViewModel>();

	protected override async Task OnInitializedAsync()
	{
		var response = await _httpClient.GetAsync($"api/game/{id}");
		quizData = await response.Content.ReadFromJsonAsync<List<NewQuizViewModel>>();
	}

}
